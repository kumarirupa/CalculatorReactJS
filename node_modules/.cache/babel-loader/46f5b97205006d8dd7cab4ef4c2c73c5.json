{"ast":null,"code":"import _defineProperty from \"/Users/admin/Desktop/projects/React Project/reality-social-ui/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/admin/Desktop/projects/React Project/reality-social-ui/src/containers/Registration/index.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/*--- Registration ---*/\nimport React from 'react';\nimport { connect } from 'react-redux'; //StyleSheets\n\nimport './Registration.scss'; //Constants\n\nimport messages from '../../messages/language';\nimport images from '../../images'; //Actions\n\nimport { registerUser } from './action'; //Utility Libraries\n\nimport { Helmet } from 'react-helmet';\nimport _ from 'lodash';\nimport { Link } from 'react-router-dom';\nimport Swal from 'sweetalert2';\nimport Validator from '../../utils/Validator';\nexport class Registration extends React.Component {\n  constructor(props) {\n    super(props); //Initializing States\n\n    this.handleChange = evt => {\n      // Handling value changes on Input and updating state likewise\n      this.setState({\n        [evt.target.name]: evt.target.value\n      });\n      this.formValidaton(evt);\n    };\n\n    this.formValidaton = evt => {\n      // Validating values from Input\n      const name = evt.target.name;\n      const value = evt.target.value;\n      let msg = \"\";\n\n      switch (name) {\n        case 'name':\n          {\n            msg = value === '' ? \"Name should not be empty*\" : \"\";\n            this.setState({\n              nameMessage: msg\n            });\n            break;\n          }\n\n        case 'email':\n          {\n            let isValid = Validator.validateEmail(value);\n            msg = value === '' ? \"Email Id should not be empty*\" : !isValid ? \"Please enter valid Email Id\" : \"\";\n            this.setState({\n              emailMessage: msg\n            });\n            break;\n          }\n\n        case 'password':\n          {\n            let isValid = Validator.validatePassword(value);\n            msg = value === '' ? \"Password should not be empty*\" : !isValid ? \"Please enter valid password\" : \"\";\n            this.setState({\n              passwordMessage: msg\n            });\n            break;\n          }\n      }\n    };\n\n    this.isFormValid = () => {\n      //Checks if all the Validations are correct and Data is present in the required fields\n      //Return a boolean\n      const _this$state = this.state,\n            nameMessage = _this$state.nameMessage,\n            emailMessage = _this$state.emailMessage,\n            passwordMessage = _this$state.passwordMessage,\n            name = _this$state.name,\n            password = _this$state.password,\n            email = _this$state.email;\n\n      const validated = _.isEmpty(nameMessage || emailMessage || passwordMessage);\n\n      const dataCheck = !_.isEmpty(name && password && email);\n      return validated && dataCheck ? true : false;\n    };\n\n    this.submitUserData = () => {\n      //Submitting Data to Server, from the respective variables\n      if (this.isFormValid()) {\n        //Checking if the data is valid before sending to Server\n        const userData = {\n          firstName: this.state.name,\n          lastName: this.state.name,\n          email: this.state.email,\n          password: this.state.password,\n          confirmPassword: this.state.password,\n          gender: 'male',\n          displayName: 'Test',\n          language: 'EN'\n        };\n        this.props.registerUser(userData);\n      }\n    };\n\n    this.state = {\n      name: '',\n      email: '',\n      password: '',\n      nameMessage: '',\n      emailMessage: ' ',\n      passwordMessage: ''\n    }; //Getting Language from Local Storage\n    //var lang = localStorage.getItem(\"lang\") || 'EN';\n    //messages = language[]\n    //Binding methods\n\n    this.handleChange = this.handleChange.bind(this);\n    this.formValidaton = this.formValidaton.bind(this);\n    this.submitUserData = this.submitUserData.bind(this);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(Helmet, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"title\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Register\"), React.createElement(\"meta\", {\n      name: \"description\",\n      content: \"Description of Login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    })), console.log('Messages paul', messages), React.createElement(\"div\", {\n      className: \"signUp-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"signUp-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"field-details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"signUp-logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"eye-img\",\n      src: images.path.realityLogoSm,\n      alt: \"eye\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"signUp-heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, messages.messages['DE'].appName), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, 'Create an account')), React.createElement(\"div\", {\n      className: \"name-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"name\",\n      name: \"name\",\n      placeholder: \"Full Name\",\n      type: \"text\",\n      onChange: this.handleChange,\n      value: this.state.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, this.state.nameMessage)), React.createElement(\"div\", {\n      className: \"mail-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"email\",\n      name: \"email\",\n      placeholder: \"Email Id\",\n      type: \"text\",\n      onChange: this.handleChange,\n      value: this.state.email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, this.state.emailMessage)), React.createElement(\"div\", {\n      className: \"password-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"password\",\n      name: \"password\",\n      placeholder: \"Password\",\n      type: \"password\",\n      onChange: this.handleChange,\n      value: this.state.password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, this.state.passwordMessage)), React.createElement(\"div\", {\n      className: \"termsConditrion\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      className: \"check-terms\",\n      name: \"sameadr\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"terms-context\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"I hereby agree all\", React.createElement(\"span\", {\n      className: \"changeTerms\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \" terms and conditions\"))), React.createElement(\"div\", {\n      className: \"register-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"start-btn\",\n      onClick: this.submitUserData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, this.props.registeringUser ? React.createElement(\"img\", {\n      src: images.path.linearLoader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }) : \"Get Started\")), React.createElement(\"div\", {\n      className: \"alreadyUser\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"redirect-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"Already have an account?\"), React.createElement(Link, {\n      to: \"/login\",\n      id: \"click-login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"Log In\")))), React.createElement(\"div\", {\n      className: \"reality-brief\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"opacEye-img\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"exp-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"reality-details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, messages.messages['JA'].tagLine)), React.createElement(\"div\", {\n      className: \"reality-people\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"exp-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"Real People\"), React.createElement(\"p\", {\n      className: \"exp-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"Real Drama\"), React.createElement(\"p\", {\n      className: \"exp-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"Real Game\"))))), React.createElement(\"div\", {\n      className: \"sideBar-slider\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"slider-img\",\n      src: images.path.rightSlideArrow,\n      alt: \"arrow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return _objectSpread({}, state.registrationReducer);\n}\n\nexport default connect(mapStateToProps, {\n  registerUser\n})(Registration);","map":{"version":3,"sources":["/Users/admin/Desktop/projects/React Project/reality-social-ui/src/containers/Registration/index.jsx"],"names":["React","connect","messages","images","registerUser","Helmet","_","Link","Swal","Validator","Registration","Component","constructor","props","handleChange","evt","setState","target","name","value","formValidaton","msg","nameMessage","isValid","validateEmail","emailMessage","validatePassword","passwordMessage","isFormValid","state","password","email","validated","isEmpty","dataCheck","submitUserData","userData","firstName","lastName","confirmPassword","gender","displayName","language","bind","render","console","log","path","realityLogoSm","appName","registeringUser","linearLoader","tagLine","rightSlideArrow","mapStateToProps","registrationReducer"],"mappings":"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","sourcesContent":["/*--- Registration ---*/\n\nimport React from 'react';\nimport { connect } from 'react-redux';\n\n//StyleSheets\nimport './Registration.scss';\n\n//Constants\nimport messages from '../../messages/language';\nimport images from '../../images';\n\n//Actions\nimport { registerUser } from './action';\n\n//Utility Libraries\nimport { Helmet } from 'react-helmet';\nimport _ from 'lodash';\nimport { Link } from 'react-router-dom';\nimport Swal from 'sweetalert2';\nimport Validator from '../../utils/Validator';\n\n\n\nexport class Registration extends React.Component {\n  constructor(props) {\n    super(props);\n\n    //Initializing States\n    this.state = {\n      name: '',\n      email: '',\n      password: '',\n      nameMessage: '',\n      emailMessage: ' ',\n      passwordMessage: ''\n    };\n\n    //Getting Language from Local Storage\n    //var lang = localStorage.getItem(\"lang\") || 'EN';\n    //messages = language[]\n\n    //Binding methods\n    this.handleChange = this.handleChange.bind(this);\n    this.formValidaton = this.formValidaton.bind(this);\n    this.submitUserData = this.submitUserData.bind(this);\n  }\n\n\n\n  handleChange = evt => {\n    // Handling value changes on Input and updating state likewise\n    this.setState({ [evt.target.name]: evt.target.value });\n    this.formValidaton(evt);\n  }\n\n  formValidaton = evt => {\n    // Validating values from Input\n    const name = evt.target.name;\n    const value = evt.target.value;\n    let msg = ``;\n\n    switch (name) {\n      case 'name': {\n        msg = value === '' ? `Name should not be empty*` : ``;\n        this.setState({ nameMessage: msg });\n        break;\n      }\n\n      case 'email': {\n        let isValid = Validator.validateEmail(value);\n        msg = value === '' ? `Email Id should not be empty*` : (!isValid ? `Please enter valid Email Id` : ``);\n        this.setState({ emailMessage: msg });\n        break;\n      }\n\n      case 'password': {\n        let isValid = Validator.validatePassword(value);\n        msg = value === '' ? `Password should not be empty*` : (!isValid ? `Please enter valid password` : ``);\n        this.setState({ passwordMessage: msg });\n        break;\n      }\n    }\n  }\n\n  isFormValid = () => {\n    //Checks if all the Validations are correct and Data is present in the required fields\n    //Return a boolean\n    const { nameMessage, emailMessage, passwordMessage, name, password, email } = this.state;\n    const validated = _.isEmpty(nameMessage || emailMessage || passwordMessage);\n    const dataCheck = !_.isEmpty(name && password && email);\n    return validated && dataCheck ? true : false;\n  }\n\n  submitUserData = () => {\n    //Submitting Data to Server, from the respective variables\n\n    if (this.isFormValid()) {\n      //Checking if the data is valid before sending to Server\n      const userData = {\n        firstName: this.state.name,\n        lastName: this.state.name,\n        email: this.state.email,\n        password: this.state.password,\n        confirmPassword: this.state.password,\n        gender: 'male',\n        displayName: 'Test',\n        language: 'EN'\n      };\n      this.props.registerUser(userData);\n    }\n  }\n\n  render() {\n\n    return (\n      <div>\n        <Helmet>\n          <title>Register</title>\n          <meta name=\"description\" content=\"Description of Login\" />\n        </Helmet>\n        {console.log('Messages paul', messages)}\n        <div className=\"signUp-container\">\n          <div className=\"signUp-field\">\n            <div className=\"field-details\">\n              <div className=\"signUp-logo\">\n                <img className=\"eye-img\" src={images.path.realityLogoSm} alt=\"eye\" />\n              </div>\n              <div className=\"signUp-heading\">\n                <h1>{messages.messages['DE'].appName}</h1>\n                <h3>{'Create an account'}</h3>\n              </div>\n              <div className=\"name-field\">\n                <input id=\"name\" name=\"name\" placeholder=\"Full Name\" type=\"text\" onChange={this.handleChange} value={this.state.name} />\n                <p>{this.state.nameMessage}</p>\n              </div>\n              <div className=\"mail-field\">\n                <input id=\"email\" name=\"email\" placeholder=\"Email Id\" type=\"text\" onChange={this.handleChange} value={this.state.email} />\n                <p>{this.state.emailMessage}</p>\n              </div>\n              <div className=\"password-field\">\n                <input id=\"password\" name=\"password\" placeholder=\"Password\" type=\"password\" onChange={this.handleChange} value={this.state.password} />\n                <p>{this.state.passwordMessage}</p>\n              </div>\n              <div className=\"termsConditrion\"><input type=\"checkbox\" className=\"check-terms\" name=\"sameadr\"></input><p className=\"terms-context\">I hereby agree all<span className=\"changeTerms\"> terms and conditions</span></p></div>\n              <div className=\"register-btn\">\n                <button className=\"start-btn\" onClick={this.submitUserData}>{this.props.registeringUser ? <img src={images.path.linearLoader} /> : `Get Started`}</button>\n              </div>\n              <div className=\"alreadyUser\">\n                <p className=\"redirect-text\" >Already have an account?</p><Link to=\"/login\" id=\"click-login\">Log In</Link>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"reality-brief\">\n            <div className=\"opacEye-img\">\n              <div className=\"exp-text\">\n\n                <div className=\"reality-details\">\n                  <h2 >{messages.messages['JA'].tagLine}</h2>\n                </div>\n                <div className=\"reality-people\">\n                  <p className=\"exp-text\">Real People</p>\n                  <p className=\"exp-text\">Real Drama</p>\n                  <p className=\"exp-text\">Real Game</p>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"sideBar-slider\">\n            <img className=\"slider-img\" src={images.path.rightSlideArrow} alt=\"arrow\" />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nfunction mapStateToProps(state) {\n  return {\n    ...state.registrationReducer\n  };\n}\n\n\nexport default connect(mapStateToProps, { registerUser })(Registration);"]},"metadata":{},"sourceType":"module"}