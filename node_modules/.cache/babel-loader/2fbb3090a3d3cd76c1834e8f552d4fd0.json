{"ast":null,"code":"import { SET_USER_DATA, SET_REGISTERING_USER, SET_RESPONSE, RESET_DATA } from '../../actions/actionTypes';\nimport { REGISTER_USER } from '../../api';\nimport APIService from \"../../services/APIServices\";\nexport const registerUser = userData => {\n  console.log('USerdata recvd paul', userData);\n  return dispatch => {\n    dispatch(registrationLoader(true));\n    APIService('POST', REGISTER_USER, userData, function (err, res) {\n      if (err) {\n        dispatch(setResponse(true, err));\n        dispatch(registrationLoader(false));\n      } else {\n        dispatch(registeredUser(res.data.result));\n        dispatch(setResponse(false, res.data.message));\n        dispatch(registrationLoader(false));\n      }\n    });\n  };\n};\n\nconst registeredUser = payload => {\n  return {\n    type: SET_USER_DATA,\n    payload\n  };\n};\n\nconst registrationLoader = payload => {\n  return {\n    type: SET_REGISTERING_USER,\n    payload\n  };\n};\n\nconst setResponse = (error, msg) => {\n  return {\n    type: SET_RESPONSE,\n    msg,\n    error\n  };\n};\n\nexport const resetRegistrationData = () => {\n  return {\n    type: RESET_DATA\n  };\n};","map":{"version":3,"sources":["/Users/admin/Desktop/projects/React Project/reality-social-ui/src/containers/Registration/action.js"],"names":["SET_USER_DATA","SET_REGISTERING_USER","SET_RESPONSE","RESET_DATA","REGISTER_USER","APIService","registerUser","userData","console","log","dispatch","registrationLoader","err","res","setResponse","registeredUser","data","result","message","payload","type","error","msg","resetRegistrationData"],"mappings":"AAEA,SACIA,aADJ,EAEIC,oBAFJ,EAGIC,YAHJ,EAIIC,UAJJ,QAKO,2BALP;AAMA,SAASC,aAAT,QAA8B,WAA9B;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AAEA,OAAO,MAAMC,YAAY,GAAGC,QAAQ,IAAI;AACpCC,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,QAAnC;AACA,SAAOG,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACC,kBAAkB,CAAC,IAAD,CAAnB,CAAR;AACAN,IAAAA,UAAU,CAAC,MAAD,EAASD,aAAT,EAAwBG,QAAxB,EAAkC,UAAUK,GAAV,EAAeC,GAAf,EAAoB;AAC5D,UAAID,GAAJ,EAAS;AACLF,QAAAA,QAAQ,CAACI,WAAW,CAAC,IAAD,EAAOF,GAAP,CAAZ,CAAR;AACAF,QAAAA,QAAQ,CAACC,kBAAkB,CAAC,KAAD,CAAnB,CAAR;AACH,OAHD,MAGO;AACHD,QAAAA,QAAQ,CAACK,cAAc,CAACF,GAAG,CAACG,IAAJ,CAASC,MAAV,CAAf,CAAR;AACAP,QAAAA,QAAQ,CAACI,WAAW,CAAC,KAAD,EAAQD,GAAG,CAACG,IAAJ,CAASE,OAAjB,CAAZ,CAAR;AACAR,QAAAA,QAAQ,CAACC,kBAAkB,CAAC,KAAD,CAAnB,CAAR;AACH;AACJ,KATS,CAAV;AAUH,GAZD;AAaH,CAfM;;AAkBP,MAAMI,cAAc,GAAGI,OAAO,IAAI;AAC9B,SAAO;AACHC,IAAAA,IAAI,EAAEpB,aADH;AAEHmB,IAAAA;AAFG,GAAP;AAIH,CALD;;AAOA,MAAMR,kBAAkB,GAAGQ,OAAO,IAAI;AAClC,SAAO;AACHC,IAAAA,IAAI,EAAEnB,oBADH;AAEHkB,IAAAA;AAFG,GAAP;AAIH,CALD;;AAOA,MAAML,WAAW,GAAG,CAACO,KAAD,EAAQC,GAAR,KAAgB;AAChC,SAAO;AACHF,IAAAA,IAAI,EAAElB,YADH;AAEHoB,IAAAA,GAFG;AAGHD,IAAAA;AAHG,GAAP;AAKH,CAND;;AAQA,OAAO,MAAME,qBAAqB,GAAG,MAAM;AACvC,SAAO;AACHH,IAAAA,IAAI,EAAEjB;AADH,GAAP;AAGH,CAJM","sourcesContent":["\n\nimport {\n    SET_USER_DATA,\n    SET_REGISTERING_USER,\n    SET_RESPONSE,\n    RESET_DATA\n} from '../../actions/actionTypes';\nimport { REGISTER_USER } from '../../api'\nimport APIService from \"../../services/APIServices\";\n\nexport const registerUser = userData => {\n    console.log('USerdata recvd paul', userData);\n    return dispatch => {\n        dispatch(registrationLoader(true));\n        APIService('POST', REGISTER_USER, userData, function (err, res) {\n            if (err) {\n                dispatch(setResponse(true, err));\n                dispatch(registrationLoader(false));\n            } else {\n                dispatch(registeredUser(res.data.result));\n                dispatch(setResponse(false, res.data.message));\n                dispatch(registrationLoader(false));\n            }\n        })\n    };\n}\n\n\nconst registeredUser = payload => {\n    return {\n        type: SET_USER_DATA,\n        payload\n    };\n}\n\nconst registrationLoader = payload => {\n    return {\n        type: SET_REGISTERING_USER,\n        payload\n    };\n}\n\nconst setResponse = (error, msg) => {\n    return {\n        type: SET_RESPONSE,\n        msg,\n        error\n    };\n}\n\nexport const resetRegistrationData = () => {\n    return {\n        type: RESET_DATA\n    };\n}"]},"metadata":{},"sourceType":"module"}